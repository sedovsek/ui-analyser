input {
    file {
        path => ["/Users/robert/PhD/research/gallery-ui/logs/debug/*"]
        start_position => "beginning"
        format => "json"
        
        # Development mode
        # Prevent keeping track on which files has been processed.
        sincedb_path => "/dev/null"
    }
}

filter {
    # A note to self
    # When using format => "json",
    # there is not possible to use json as a filter

    # Prints session start and
    # change @version to session id
    if "sessionStart" in [event] {
        mutate {
            add_field => {
                "Session Id Started" => "%{[event][sessionStart]}"
            }
            replace => [ "@version", "%{[event][sessionStart]}" ]
        }
    } else {
        mutate {
            replace => [ "@version", "%{[event][sessionId]}" ]
        }
    }

    # Prints initial information
    if "userAgent" in [event] {
        mutate {
            add_field => {
                "User Agent" => "%{[event][userAgent]}"
            }
        }
    }

    # Print information about user-interface
    if "user-interface" in [event] {
        mutate {
            add_field => {
                "User Interface"  => "%{[event][user-interface]}"
            }
        }
    }

    # Change @timestamp to event's timestamp
    date {
        match => [ "timestamp", "UNIX" ]
    }

    mutate {
        # Remove tags that were either replaced or useless
        # remove_field => ["event"]
        remove_field => ["host", "path", "receiverHostname", "timestamp"]
    }
}

output {
    # Outputs all, only for debugging
    stdout {
        codec => rubydebug
    }
}